#!/usr/bin/env sh
# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2023 Riku Viitanen <riku.viitanen@protonmail.com>
# SPDX-FileCopyrightText: 2023 Leah Rowe <leah@libreboot.org>

set -u -e

. "include/err.sh"

eval "$(setvars "" pico_sdk_dir pico_src_dir stm32_src_dir boards_dir)"

pico_src_dir=src/pico-serprog
pico_sdk_dir=src/pico-sdk
stm32_src_dir=src/stm32-vserprog

usage="usage: ./build firmware serprog <rp2040|stm32> [board]"

main()
{
	[ -z "${1+x}" ] && err "${usage}"
	[ "$1" != "rp2040" ] && [ "$1" != "stm32" ] && err "$usage"
	if [ "${1}" = "rp2040" ]; then
		boards_dir=${pico_sdk_dir}/src/boards/include/boards
		[ -d "$pico_src_dir" ] || x_ ./update trees -f "pico-serprog"
	elif [ "${1}" = "stm32" ]; then
		boards_dir=${stm32_src_dir}/boards
		[ -d "$stm32_src_dir" ] || x_ ./update trees -f "stm32-vserprog"
	fi
	x_ mkdir -p "bin/serprog_${1}"

	if [ $# -gt 1 ] && [ "${2}" = "list" ]; then
		print_boards ${boards_dir}
	elif [ $# -gt 1 ]; then
		build_${1}_rom "${2}"
	else
		printf "Building all serprog targets\n"
		list_boards "${boards_dir}" | while read -r board; do
			build_${1}_rom "${board}"
		done
	fi
}

build_rp2040_rom()
{
	board=${1}
	printf "Building pico-serprog for %s\n" "${board}"
	x_ cmake -DPICO_BOARD="$board" -DPICO_SDK_PATH="$pico_sdk_dir" \
	    -B "${pico_src_dir}/build" "${pico_src_dir}"
	x_ cmake --build "${pico_src_dir}/build"
	x_ mv ${pico_src_dir}/build/pico_serprog.uf2 \
	   bin/serprog_rp2040/serprog_${board}.uf2
	printf "output to bin/serprog_rp2040/serprog_%s.uf2\n" "$board"
}

build_stm32_rom()
{
	board=${1}
	printf "Building stm32-vserprog for %s\n" "${board}"
	x_ make -C $stm32_src_dir libopencm3-just-make BOARD=$board
	x_ make -C ${stm32_src_dir} BOARD=${board}
	x_ mv ${stm32_src_dir}/stm32-vserprog.hex \
	   bin/serprog_stm32/serprog_${board}.hex
	printf "output to bin/serprog_stm32/serprog_%s.hex\n" "$board"
}

print_boards()
{
	printf "Available boards:\n"
	list_boards "${1}"
}

list_boards()
{
	basename -a -s .h "${1}/"*.h
}

main $@
