#!/usr/bin/env sh
# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2023 Riku Viitanen <riku.viitanen@protonmail.com>

set -u -e

. "include/err.sh"

eval "$(setvars "" platform pico_sdk_dir pico_src_dir stm32_src_dir boards_dir)"

pico_src_dir=src/pico-serprog
pico_sdk_dir=src/pico-sdk
stm32_src_dir=src/stm32-vserprog

usage="usage: ./build firmware serprog <rp2040|stm32> [board]"

main()
{
	[ -z "${1+x}" ] && err "${usage}"
	if [ "${1}" = "rp2040" ]; then
		platform="rp2040"
		boards_dir=${pico_sdk_dir}/src/boards/include/boards
		[ -d "${pico_src_dir}/" ] || \
			x_ ./update trees -f "pico-serprog"
	elif [ "${1}" = "stm32" ]; then
		platform="stm32"
		boards_dir=${stm32_src_dir}/boards
		[ -d "${stm32_src_dir}/" ] || \
			x_ ./update trees -f "stm32-vserprog"
	else
		err "${usage}"
	fi
	x_ mkdir -p "bin/serprog_${platform}"

	if [ $# -gt 1 ] ; then
		if [ "${2}" = "list" ]; then
			print_boards ${boards_dir}
			return 0
		fi
		build_${platform}_rom "${2}"
	else
		printf "Building all serprog targets\n"
		list_boards "${boards_dir}" | while read board; do
			build_${platform}_rom "${board}"
		done
	fi
}

build_rp2040_rom()
{
	board=${1}
	printf "Building pico-serprog for %s\n" "${board}"
	x_ cmake -DPICO_BOARD="${board}" -DPICO_SDK_PATH="${pico_sdk_dir}" \
	    -B "${pico_src_dir}/build" "${pico_src_dir}"
	x_ cmake --build "${pico_src_dir}/build"
	x_ mv ${pico_src_dir}/build/pico_serprog.uf2 \
	   bin/serprog_rp2040/serprog_${board}.uf2
	printf "output to bin/serprog_rp2040/serprog_%s.uf2\n" "${board}"
}

build_stm32_rom()
{
	board=${1}
	printf "Building stm32-vserprog for %s\n" "${board}"
	x_ make -C ${stm32_src_dir} libopencm3-just-make BOARD=${board}
	x_ make -C ${stm32_src_dir} BOARD=${board}
	x_ mv ${stm32_src_dir}/stm32-vserprog.hex \
	   bin/serprog_stm32/serprog_${board}.hex
	printf "output to bin/serprog_stm32/serprog_%s.hex\n" "${board}"
}

print_boards()
{
	printf "Available boards:\n"
	list_boards "${1}"
}

list_boards()
{
	basename -a -s .h "${1}/"*.h
}

main $@
