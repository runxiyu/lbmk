#!/usr/bin/env sh
# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2023 Leah Rowe <leah@libreboot.org>

[ "x${DEBUG+set}" = 'xset' ] && set -v
set -u -e

. "include/err.sh"

eval "$(setvars "" mode project)"

main()
{
	while getopts b:c: option
	do
		case "${1}" in
		-b) : ;;
		-c) mode="distclean" ;;
		*) err "Invalid option" ;;
		esac
		shift; project="${OPTARG}"; shift
	done

	[ -z "${project}" ] && err "project name not specified"

	handle_dependencies
	run_make_command
}

handle_dependencies()
{
	[ -d "${project}" ] || x_ ./update project repo "${project%/*}"
	[ -d "${project}" ] || \
		err "handle_dependencies: ${project%/*} not downloaded"

	[ "${project}" = "uefitool" ] || return 0 # TODO: remove hardcoding
	(
	x_ cd uefitool
	cmake UEFIExtract/ || [ -f Makefile ] || \
	    err "handle_dependencies: !cmake UEFIExtract/"
	)
}

run_make_command()
{
	if [ -z "${mode}" ]; then
		x_ make -C "${project}" -j$(nproc)
	else
		x_ make -C "${project}" clean
		make -C "${project}" distclean || :
	fi
}

main $@
